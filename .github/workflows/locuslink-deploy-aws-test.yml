# This workflow will:
#        - pull the Docker Image in the GHCR Git Hub Container Registry, using the build number provided as a parameter  xxxxxxxxxx.dev.4 
#        - push the Docker Image in the GHCR Git Hub Container Registry, xxxxxxxxxx.dev.4.latest  {for reference for redeploy, backout, etc} 
#        - push the Docker Image in the GHCR Git Hub Container Registry, xxxxxxxxxx.dev.latest   {used by the ECS container}
#        - update the AWS Cluster & Service, will will repull the Docker Inmage by name convention, xxxxxxxxx.dev.latest

name: TESTING -  AWS Service Update Dev

on: 
  workflow_dispatch:
    
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}                           
  BUILD_NUMBER_TO_DEPLOY :  ${{ inputs.buildnumber_to_deploy }}
  VERSION: dev
  
  ECS_CLUSTER: sparks-default-cluster   
  ECS_SERVICE: container-sparks-service  
  
jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: AWS Dev Deploy - Update Service with latest Image
      run: |
          aws ecs update-service --cluster ${ECS_CLUSTER}  --service ${ECS_SERVICE} --force-new-deployment
          
          echo Service Update Completed, Waiting for the deployment to Finish ....
          aws ecs wait services-stable --cluster ${ECS_CLUSTER}  --service ${ECS_SERVICE} 
          
      env:
          #AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          #AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
          AWS_ACCESS_KEY_ID: AKIA5MSVXCMPY7CNJTEP
          AWS_SECRET_ACCESS_KEY: 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            
          AWS_DEFAULT_REGION: us-east-1 
           
 
